@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject StoresDbContext _context
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using Stores.Data
@model IEnumerable<Stores.ViewModels.CategoryViewModel>

@{
    ViewData["Title"] = "Home Page";
    Cart userCart = null;

    if (SignInManager.IsSignedIn(User))
    {
        var userId = UserManager.GetUserId(User);
        userCart = _context.Carts.Include(c => c.CartProductMaps)
            .ThenInclude(cp => cp.Product)
            .FirstOrDefault(c => c.UserId == userId);
    }
}

<div class="category-tabs">
    <ul class="nav nav-pills justify-content-center mb-4">
        <li class="nav-item">
            <a class="nav-link category-tab active" href="#" data-category="all">All</a>
        </li>
        @foreach (var category in Model)
        {
            <li class="nav-item">
                <a class="nav-link category-tab" href="#" data-category="@category.Id">@category.Name</a>
            </li>
        }
    </ul>
</div>

<div class="stores-container">
    @foreach (var category in Model)
    {
        <div class="category-stores" data-category-id="@category.Id">
            @foreach (var store in category.Stores)
            {
                <div class="store-section mb-4">
                    <h3 class="store-name">@store.Name</h3>
                    <div class="container">
                        <div class="row">
                            @foreach (var product in store.Products)
                            {
                                <div class="col-6 col-md-4 col-lg-3 mb-4">
                                    <div class="card text-center h-100">
                                        <div class="card-body card-text-bg">
                                            <p class="card-title">@product.Name</p>
                                        </div>
                                        <img src="@product.PhotoLink" alt="@product.Description" class="card-img-bottom img-fluid product-img"/>
                                        <div class="card-footer">
                                            <p>Available: @product.Quantity</p>
                                            <strong>@product.Price.ToString("C")</strong>
                                            
                                            <form class="card-footer-form" action="/api/cart/add/@product.Id" method="post">
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="number" class="form-control text-center product-quantity"
                                                       name="quantity"
                                                       value="1"
                                                       min="1"
                                                       max="@product.Quantity"
                                                       oninput="checkMax(this, @product.Quantity)" />
                                                <button type="submit" class="btn btn-outline-primary mt-2 add-to-cart">Add to cart</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<div class="shopping-cart-wrapper" id="navbarShopCartDropdown">
    <div class="shopping-cart-dropdown">
        <div class="cart-header">
            <h6>Shopping Cart</h6>
            <span class="cart-count">@(userCart?.CartProductMaps?.Count ?? 0) Items</span>
        </div>
        <div class="cart-items">
            @if (userCart != null && userCart.CartProductMaps.Any())
            {
                @foreach (var item in userCart.CartProductMaps)
                {
                    <div class="cart-item">
                        <span>@item.Product.Name</span> x @item.Quantity
                        <form action="/api/cart/remove/@item.ProductId" method="post" style="display:inline;">
                            <input type="hidden" name="productId" value="@item.ProductId"/>
                            <button type="submit" class="btn btn-outline-danger delete-item-from-cart">
                                <i class="bi bi-trash"></i>
                            </button>
                        </form>
                    </div>
                }
            }
            else
            {
                <div class="empty-cart">
                    <p>Your cart is empty</p>
                </div>
            }
        </div>
        <div class="cart-footer">
            <div class="cart-total">
                <strong>Total: @userCart?.getTotalAmount().ToString("C")</strong>
            </div>
            <form asp-action="Checkout" asp-controller="Cart" method="get" style="display:inline;">
                <button type="submit" class="btn btn-primary btn-sm checkout-btn">Checkout</button>
            </form>
        </div>
    </div>
</div>

<button class="shop-cart-toggler" type="button" aria-label="Toggle shopping cart">
    <i class="bi bi-cart"></i>
</button>

<div class="shopping-cart-item-count">
    <span>@(userCart?.CartProductMaps?.Count ?? 0)</span>
</div>